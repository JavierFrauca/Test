using FluentValidation;
using FluentValidation.AspNetCore;
using TEST.Data;
using Microsoft.EntityFrameworkCore;
using TEST.Dtos;
using TEST.Models;
using TEST.Repositories;
using TEST.Services;
using TEST.Validations;
using TEST.Mappers;

var builder = WebApplication.CreateBuilder(args);

builder.Services.AddDbContext<MiData>(options => options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
builder.Services.AddAutoMapper(cfg => cfg.AddProfile<Mappers>());
builder.Services.AddScoped<ICommonRepository<Tabla1>, Tabla1Repository>();
builder.Services.AddScoped<ICommonRepository<Tabla2>, Tabla2Repository>();
builder.Services.AddScoped<ICommonRepository<Tabla3>, Tabla3Repository>();
builder.Services.AddScoped<ICommonService<Tabla1Dto>, Tabla1Service>();
builder.Services.AddScoped<ICommonService<Tabla2Dto>, Tabla2Service>();
builder.Services.AddScoped<ITabla3Service, Tabla3Service>();
builder.Services.AddFluentValidationAutoValidation();
builder.Services.AddScoped<IValidator<Tabla3Dto>, Tabla3Validation>();
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
var app = builder.Build();
app.UseSwagger();
app.UseSwaggerUI(); 
app.UseHttpsRedirection();
app.UseAuthorization();
app.MapControllers();
app.Run();
